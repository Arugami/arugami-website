---
export interface HeroStat {
  value: string;
  label: string;
}

export interface ListItem {
  title: string;
  description: string;
}

export interface StrategyBlock {
  title: string;
  bullets: string[];
  accent?: 'pink' | 'green' | 'yellow';
}

export interface ProofItem {
  stat: string;
  description: string;
}

export interface FAQItem {
  question: string;
  answer: string;
}

export interface LocationSchema {
  name: string;
  description?: string;
  areaServed?: string;
}

export interface Props {
  hero: {
    kicker: string;
    title: string;
    subtitle: string;
    image: string;
    alt: string;
    stats: HeroStat[];
    primaryCta: { href: string; label: string };
    secondaryCta?: { href: string; label: string };
  };
  intro: string;
  neighborhoods: ListItem[];
  strategy: StrategyBlock[];
  proof: ProofItem[];
  galleryImage: string;
  galleryAlt: string;
  closing: {
    title: string;
    subtitle: string;
    ctaLabel: string;
    ctaHref: string;
  };
  faq?: FAQItem[];
  schema?: LocationSchema;
}

const {
  hero,
  intro,
  neighborhoods,
  strategy,
  proof,
  galleryImage,
  galleryAlt,
  closing,
  faq = [],
  schema,
} = Astro.props as Props;

const pageUrl = Astro.site
  ? new URL(Astro.url.pathname, Astro.site).toString()
  : Astro.url.origin + Astro.url.pathname;

const heroImageUrl = Astro.site
  ? new URL(hero.image, Astro.site).toString()
  : hero.image;

const localBusinessSchema = {
  '@context': 'https://schema.org',
  '@type': 'LocalBusiness',
  name: schema?.name ?? `Arugami â€” ${hero.kicker}`,
  description: schema?.description ?? hero.subtitle,
  url: pageUrl,
  telephone: '+1-201-405-1234',
  image: heroImageUrl,
  areaServed: {
    '@type': 'AdministrativeArea',
    name: schema?.areaServed ?? `${hero.kicker}, Hudson County, NJ`,
  },
  address: {
    '@type': 'PostalAddress',
    streetAddress: '295 Newark Ave',
    addressLocality: 'Jersey City',
    addressRegion: 'NJ',
    postalCode: '07302',
    addressCountry: 'US',
  },
  sameAs: [
    'https://www.instagram.com/arugami',
    'https://www.linkedin.com/company/arugami',
  ],
};
---

<section class="relative overflow-hidden">
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-gradient-to-br from-arugami-dark via-black/80 to-arugami-dark"></div>
    <img src={hero.image} width="1920" height="1080" loading="lazy" decoding="async" alt={hero.alt} class="absolute inset-0 h-full w-full object-cover opacity-35" />
  </div>
  <div class="relative max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-24 text-white">
    <span class="inline-flex rounded-full bg-white/10 px-4 py-2 text-xs font-semibold uppercase tracking-[0.25em] text-white/70">{hero.kicker}</span>
    <div class="mt-8 grid gap-12 lg:grid-cols-[minmax(0,1fr)_340px] lg:items-start">
      <div class="space-y-6">
        <h1 class="text-4xl sm:text-5xl font-black tracking-tight">{hero.title}</h1>
        <p class="text-lg text-white/80">{hero.subtitle}</p>
        <div class="flex flex-wrap gap-4">
          <a href={hero.primaryCta.href} class="inline-flex items-center gap-3 rounded-full bg-arugami-pink px-6 py-3 text-sm font-bold text-white shadow-[0_18px_40px_rgba(255,51,153,0.35)] transition hover:-translate-y-1 hover:bg-arugami-yellow hover:text-arugami-dark">{hero.primaryCta.label}</a>
          {hero.secondaryCta && (
            <a href={hero.secondaryCta.href} class="inline-flex items-center gap-3 rounded-full border border-white/30 px-6 py-3 text-sm font-bold text-white/80 transition hover:border-arugami-green hover:text-white">{hero.secondaryCta.label}</a>
          )}
        </div>
      </div>
      <div class="rounded-3xl border border-white/10 bg-white/5 p-6 backdrop-blur">
        <p class="text-xs uppercase tracking-[0.3em] text-white/60">Your results</p>
        <div class="mt-5 space-y-4">
          {hero.stats.map((item) => (
            <div class="rounded-2xl border border-white/10 bg-white/5 px-4 py-3">
              <p class="text-2xl font-black text-white">{item.value}</p>
              <p class="text-sm text-white/70">{item.label}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<section class="py-16 bg-white">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 grid gap-12 lg:grid-cols-[minmax(0,1fr)_minmax(0,1fr)]">
    <div class="space-y-4">
      <h2 class="text-3xl font-black tracking-tight">Why this municipality chooses local first</h2>
      <p class="text-lg text-arugami-dark/70">{intro}</p>
    </div>
    <div class="grid gap-4">
      {neighborhoods.map((item) => (
        <div class="rounded-3xl border border-arugami-dark/10 bg-soft-gray p-5">
          <h3 class="text-lg font-black text-arugami-dark">{item.title}</h3>
          <p class="mt-2 text-sm text-arugami-dark/70">{item.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<section class="py-20 bg-soft-gray">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <h2 class="text-3xl font-black tracking-tight text-center text-arugami-dark">How we win the block</h2>
    <p class="mt-3 text-center text-lg text-arugami-dark/70">The foundation-first system flexes for every Hudson County neighborhood. We tailor each phase to the way locals discover you.</p>
    <div class="mt-10 grid gap-8 lg:grid-cols-3">
      {strategy.map((stage) => (
        <div class={`rounded-3xl border bg-white p-8 shadow-[0_20px_40px_rgba(54,54,54,0.08)] ${
          stage.accent === 'green'
            ? 'border-arugami-green/30'
            : stage.accent === 'yellow'
            ? 'border-arugami-yellow/30'
            : 'border-arugami-pink/30'
        }`}>
          <h3 class="text-lg font-black text-arugami-dark">{stage.title}</h3>
          <ul class="mt-4 space-y-3 text-sm text-arugami-dark/70">
            {stage.bullets.map((bullet) => (
              <li class="flex items-start gap-3">
                <span class={`mt-1 inline-flex h-2.5 w-2.5 flex-none rounded-full ${
                  stage.accent === 'green'
                    ? 'bg-arugami-green'
                    : stage.accent === 'yellow'
                    ? 'bg-arugami-yellow'
                    : 'bg-arugami-pink'
                }`}></span>
                <span>{bullet}</span>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</section>

<section class="py-20 bg-white">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 grid gap-12 lg:grid-cols-[minmax(0,1.1fr)_minmax(0,0.9fr)] lg:items-center">
    <div class="space-y-6">
      <h2 class="text-3xl font-black tracking-tight">Proof from the neighborhood</h2>
      <div class="grid gap-6 sm:grid-cols-2">
        {proof.map((item) => (
          <div class="rounded-3xl border border-arugami-dark/10 bg-soft-gray p-6">
            <p class="text-2xl font-black text-arugami-pink">{item.stat}</p>
            <p class="mt-3 text-sm text-arugami-dark/70">{item.description}</p>
          </div>
        ))}
      </div>
    </div>
    <div class="overflow-hidden rounded-3xl border border-arugami-pink/20 shadow-[0_20px_40px_rgba(255,51,153,0.2)]">
      <img src={galleryImage} width="1600" height="1600" loading="lazy" decoding="async" alt={galleryAlt} class="h-full w-full object-cover" />
    </div>
  </div>
</section>

{faq.length > 0 && (
  <section class="py-16 bg-soft-gray">
    <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl font-black tracking-tight text-center text-arugami-dark">Local questions we hear on every kickoff call</h2>
      <p class="mt-3 text-center text-lg text-arugami-dark/70">Straight answers so you know how we operate in your neighborhood.</p>
      <div class="mt-10 space-y-4">
        {faq.map((item) => (
          <details class="rounded-2xl border border-arugami-dark/10 bg-white p-5 shadow-[0_10px_20px_rgba(54,54,54,0.05)]">
            <summary class="cursor-pointer text-base font-semibold text-arugami-dark">{item.question}</summary>
            <p class="mt-3 text-sm text-arugami-dark/70">{item.answer}</p>
          </details>
        ))}
      </div>
    </div>
  </section>
)}

<section class="py-20 bg-arugami-dark text-white">
  <div class="max-w-4xl mx-auto px-4 text-center">
    <h2 class="text-3xl font-black tracking-tight">{closing.title}</h2>
    <p class="mt-4 text-lg text-white/70">{closing.subtitle}</p>
    <a href={closing.ctaHref} class="mt-6 inline-flex items-center gap-3 rounded-full bg-arugami-pink px-6 py-3 text-sm font-bold text-white shadow-[0_18px_40px_rgba(255,51,153,0.35)] transition hover:-translate-y-1 hover:bg-arugami-yellow hover:text-arugami-dark">{closing.ctaLabel}</a>
  </div>
</section>

<script type="application/ld+json">
  {JSON.stringify(localBusinessSchema)}
</script>

{faq.length > 0 && (
  <script type="application/ld+json">
    {JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'FAQPage',
      mainEntity: faq.map((item) => ({
        '@type': 'Question',
        name: item.question,
        acceptedAnswer: {
          '@type': 'Answer',
          text: item.answer,
        },
      })),
    })}
  </script>
)}
